// <auto-generated />
using System;
using DebugMenu.Silo.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DebugMenu.Silo.Migrations
{
    [DbContext(typeof(DebugMenuDbContext))]
    [Migration("20240208221521_DebugMenuDbContext_Initial")]
    partial class DebugMenuDbContext_Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DebugMenu.Silo.Persistence.AuthJs.SessionEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("sessions", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Persistence.AuthJs.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EmailVerified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProviderAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("applications", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationUserEntity", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("ApplicationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("applications_users", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.RuntimeTokens.Persistence.EntityFramework.RuntimeTokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("runtime_tokens", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Teams.Persistence.EntityFramework.TeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Teams.Persistence.EntityFramework.TeamUserEntity", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("teams_users", (string)null);
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationUserEntity", b =>
                {
                    b.HasOne("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationEntity", "Application")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebugMenu.Silo.Persistence.AuthJs.UserEntity", "User")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.RuntimeTokens.Persistence.EntityFramework.RuntimeTokenEntity", b =>
                {
                    b.HasOne("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationEntity", null)
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId");

                    b.HasOne("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationEntity", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Teams.Persistence.EntityFramework.TeamUserEntity", b =>
                {
                    b.HasOne("DebugMenu.Silo.Web.Teams.Persistence.EntityFramework.TeamEntity", "Team")
                        .WithMany("TeamUsers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebugMenu.Silo.Persistence.AuthJs.UserEntity", "User")
                        .WithMany("TeamUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DebugMenu.Silo.Persistence.AuthJs.UserEntity", b =>
                {
                    b.Navigation("ApplicationUsers");

                    b.Navigation("TeamUsers");
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Applications.Persistence.EntityFramework.ApplicationEntity", b =>
                {
                    b.Navigation("ApplicationUsers");
                });

            modelBuilder.Entity("DebugMenu.Silo.Web.Teams.Persistence.EntityFramework.TeamEntity", b =>
                {
                    b.Navigation("TeamUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
